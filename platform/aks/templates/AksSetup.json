{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceGroup": {
            "type": "string"
        },
        "region": {
            "type": "string"
        },
        "adminUsername": {
            "type": "string"
        },
        "adminPassword": {
            "type": "secureString"
        },
        "netbiosName": {
            "type": "string"
        },
        "domainSuffix": {
            "type": "string"
        },
        "templateAksUrl": {
            "type": "string"
        },
        "vnetIpAddressRangeStr": {
            "type": "string"
        },
        "installSQL2019": {
            "type": "string"
        },
        "installSQL2022": {
            "type": "string"
        },
        "installMonitoring": {
            "type": "string"
        },
        "DH2iAvailabilityGroup": {
            "type": "string"
        },
        "DH2iLicenseKey": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "variables": {
        "contributorRole": "b24988ac-6180-42a0-ab88-20f7382dd24c",
        "networkContributorRole": "4d97b98b-1d4f-4787-a291-c67834d212e7",
        "dcVM": "[concat(parameters('netbiosName'), 'DC')]",
        "linuxVM": "[concat(parameters('netbiosName'), 'Linux')]",
        "jumpboxVM": "[concat(parameters('netbiosName'), 'Jumpbox')]",
        "jumpboxNsgId": "[resourceId(parameters('resourceGroup'), 'Microsoft.Network/networkSecurityGroups', concat(variables('jumpboxVM'), '-nsg'))]",
        "vmsNsgName": "[concat(parameters('netbiosName'), 'VMs-nsg')]",
        "vmsNsgId": "[resourceId(parameters('resourceGroup'), 'Microsoft.Network/networkSecurityGroups', variables('vmsNsgName'))]",
        "bastionNsgName": "[concat(parameters('netbiosName'), 'AzureBastionSubnet-nsg')]",
        "bastionNsgId": "[resourceId(parameters('resourceGroup'), 'Microsoft.Network/networkSecurityGroups', variables('bastionNsgName'))]",
        "aksNsgName": "[concat(parameters('netbiosName'), 'AKS-nsg')]",
        "aksNsgId": "[resourceId(parameters('resourceGroup'), 'Microsoft.Network/networkSecurityGroups', variables('aksNsgName'))]",
        "vnetName": "[concat(parameters('netbiosName'), '-vnet')]",
        "vnetId": "[resourceId(parameters('resourceGroup'),'Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "subnetRefVMs": "[concat(variables('vnetId'), '/subnets/', 'VMs')]",
        "aksCluster": "[concat(toLower(parameters('netbiosName')), 'aks')]",
        "aksVersion": "1.26.6",
        "resourceGroupRoleGuid": "[guid(resourceGroup().id)]",
        "aksSubnetRoleGuid": "[guid(resourceGroup().id, 'AKS')]"
    },
    "resources": [
        {
            "name": "[concat(variables('dcVM'), '-nic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2021-03-01",
            "location": "[parameters('region')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRefVMs')]"
                            },
                            "privateIPAllocationMethod": "Static",
                            "privateIpAddress": "[concat('10.', parameters('vnetIpAddressRangeStr'), '.16.4')]"
                        }
                    }
                ],
                "enableAcceleratedNetworking": true
            }
        },
        {
            "name": "[concat(variables('linuxVM'), '-nic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2021-03-01",
            "location": "[parameters('region')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRefVMs')]"
                            },
                            "privateIPAllocationMethod": "Static",
                            "privateIpAddress": "[concat('10.', parameters('vnetIpAddressRangeStr'), '.16.5')]"
                        }
                    }
                ],
                "enableAcceleratedNetworking": true
            }
        },
        {
            "name": "[concat(variables('jumpboxVM'), '-nic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2021-03-01",
            "location": "[parameters('region')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', concat(variables('jumpboxVM'), '-nsg'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', concat(variables('jumpboxVM'), '-ip'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRefVMs')]"
                            },
                            "privateIPAllocationMethod": "Static",
                            "privateIpAddress": "[concat('10.', parameters('vnetIpAddressRangeStr'), '.16.6')]",
                            "publicIpAddress": {
                                "id": "[resourceId(parameters('resourceGroup'), 'Microsoft.Network/publicIpAddresses', concat(variables('jumpboxVM'), '-ip'))]",
                                "properties": {
                                    "deleteOption": "Detach"
                                }
                            }
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [
                        "168.63.129.16"
                    ]
                },
                "enableAcceleratedNetworking": true,
                "networkSecurityGroup": {
                    "id": "[variables('jumpboxNsgId')]"
                }
            }
        },
        {
            "name": "[variables('vmsNsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "location": "[parameters('region')]"
        },
        {
            "name": "[variables('bastionNsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "location": "[parameters('region')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowGatewayManager",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', variables('bastionNsgName'), 'AllowGatewayManager')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "description": "Allow GatewayManager",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "GatewayManager",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 2702,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowHttpsInBound",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', variables('bastionNsgName'), 'AllowHttpsInBound')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "description": "Allow HTTPs",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 2703,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowSshRdpOutbound",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', variables('bastionNsgName'), 'AllowSshRdpOutbound')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [
                                "22",
                                "3389"
                            ],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureCloudOutbound",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', variables('bastionNsgName'), 'AllowAzureCloudOutbound')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "AzureCloud",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowCorpnet",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', variables('bastionNsgName'), 'AllowCorpnet')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "description": "CSS Governance Security Rule.  Allow Corpnet inbound.  https://aka.ms/casg",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "CorpNetPublic",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 2700,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowSAW",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', variables('bastionNsgName'), 'AllowSAW')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "description": "CSS Governance Security Rule.  Allow SAW inbound.  https://aka.ms/casg",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "CorpNetSaw",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 2701,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('aksNsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "location": "[parameters('region')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowCorpnet",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', variables('aksNsgName'), 'AllowCorpnet')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "description": "CSS Governance Security Rule.  Allow Corpnet inbound.  https://aka.ms/casg",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "CorpNetPublic",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 2700,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowSAW",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', variables('aksNsgName'), 'AllowSAW')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "description": "CSS Governance Security Rule.  Allow SAW inbound.  https://aka.ms/casg",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "CorpNetSaw",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 2701,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('jumpboxVM'), '-nsg')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "location": "[parameters('region')]"
        },
        {
            "name": "[variables('vnetName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "location": "[parameters('region')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('vmsNsgName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('bastionNsgName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('aksNsgName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": ["[concat('10.', parameters('vnetIpAddressRangeStr'), '.0.0/16')]"]
                },
                "dhcpOptions": {
                    "dnsServers": [
                        "[concat('10.', parameters('vnetIpAddressRangeStr'), '.16.4')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "AKS",
                        "properties": {
                            "addressPrefix": "[concat('10.', parameters('vnetIpAddressRangeStr'), '.0.0/20')]",
                            "networkSecurityGroup": {
                                "id": "[variables('aksnsgId')]"
                            }
                        }
                    },
                    {
                        "name": "VMs",
                        "properties": {
                            "addressPrefix": "[concat('10.', parameters('vnetIpAddressRangeStr'), '.16.0/26')]",
                            "networkSecurityGroup": {
                                "id": "[variables('vmsnsgId')]"
                            }
                        }
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "properties": {
                            "addressPrefix": "[concat('10.', parameters('vnetIpAddressRangeStr'), '.16.64/26')]",
                            "networkSecurityGroup": {
                                "id": "[variables('bastionnsgId')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('netbiosName'), '-bastion-ip')]",
            "location": "[parameters('region')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('netbiosName'), '-bastion')]",
            "location": "[parameters('region')]",
            "dependsOn": [
                "[resourceId(parameters('resourceGroup'), 'Microsoft.Network/virtualNetworks', variables('vnetName'))]",
                "[resourceId(parameters('resourceGroup'), 'Microsoft.Network/publicIpAddresses', concat(parameters('netbiosName'), '-bastion-ip'))]",
                "[resourceId('Microsoft.Compute/virtualMachines/', variables('jumpboxVM'))]",
                "[resourceId('Microsoft.Authorization/roleAssignments/', variables('resourceGroupRoleGuid'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId(parameters('resourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'AzureBastionSubnet')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId(parameters('resourceGroup'), 'Microsoft.Network/publicIpAddresses', concat(parameters('netbiosName'), '-bastion-ip'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('dcVM')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-03-01",
            "location": "[parameters('region')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('dcVM'), '-nic')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2s_v3"
                },
                "storageProfile": {
                    "osDisk": {
                        "name": "[concat(variables('dcVM'),'-OSDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        },
                        "diskSizeGB": 128,
                        "deleteOption": "Delete"
                    },
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2022-datacenter-g2",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('dcVM'), '-nic'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('dcVM')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true,
                        "patchSettings": {
                            "enableHotpatching": false,
                            "patchMode": "AutomaticByOS"
                        }
                    }
                },
                "licenseType": "Windows_Server"
            }
        },
        {
            "name": "[concat(variables('jumpboxVM'), '-ip')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-08-01",
            "location": "[parameters('region')]",
            "properties": {
                "publicIpAllocationMethod": "Static"
            },
            "sku": {
                "name": "Standard"
            }
        },
        {
            "name": "[variables('jumpboxVM')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-03-01",
            "location": "[parameters('region')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('jumpboxVM'), '-nic')]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('jumpboxVM'), '-ip')]",
                "[resourceId('Microsoft.Compute/virtualMachines/', variables('dcVM'))]"
            ],
            "identity": {
                "type": "systemAssigned"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2s_v3"
                },
                "storageProfile": {
                    "osDisk": {
                        "name": "[concat(variables('jumpboxVM'),'-OSDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        },
                        "diskSizeGB": 128,
                        "deleteOption": "Delete"
                    },
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2022-datacenter-g2",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('jumpboxVM'), '-nic'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('jumpboxVM')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true,
                        "patchSettings": {
                            "enableHotpatching": false,
                            "patchMode": "AutomaticByOS"
                        }
                    }
                },
                "licenseType": "Windows_Client"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[variables('resourceGroupRoleGuid')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/', variables('jumpboxVM'))]"
            ],
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', variables('contributorRole'))]",
                "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines', variables('jumpboxVM')), '2022-03-01', 'Full').identity.principalId]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('jumpboxVM'), '/EnvironmentSetup')]",
            "apiVersion": "2022-03-01",
            "location": "[parameters('region')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/', variables('jumpboxVM'))]",
                "[resourceId('Microsoft.Authorization/roleAssignments/', variables('resourceGroupRoleGuid'))]"
            ],
            "tags": {
                "displayName": "setup-environment"
            },
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.10",
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                    "fileUris": [
                        "[uri(parameters('templateAksUrl'), 'scripts/EnvironmentSetup.ps1')]"
                    ],
                    "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Bypass -File EnvironmentSetup.ps1', ' -adminUsername ', parameters('adminUsername'), ' -adminPassword ' , parameters('adminPassword'), ' -resourceGroup ', parameters('resourceGroup'), ' -azureLocation ', parameters('region'), ' -templateAksUrl ', parameters('templateAksUrl'), ' -netbiosName ', parameters('netbiosName'), ' -domainSuffix ', parameters('domainSuffix'), ' -vnetName ', variables('vnetName'), ' -vnetIpAddressRangeStr ', parameters('vnetIpAddressRangeStr'), ' -dcVM ', variables('dcVM'), ' -linuxVM ', variables('linuxVM'), ' -jumpboxVM ', variables('jumpboxVM'), ' -jumpboxNic ', concat(variables('jumpboxVM'), '-nic'), ' -installSQL2019 ', parameters('installSQL2019'), ' -installSQL2022 ', parameters('installSQL2022'), ' -aksCluster ', variables('aksCluster'), ' -dH2iAvailabilityGroup', parameters('DH2iAvailabilityGroup'), ' -dH2iLicenseKey ', parameters('DH2iLicenseKey'), ' -installMonitoring ', parameters('installMonitoring'))]"
                }
            }
        },
        {
            "apiVersion": "2022-06-01",
            "type": "Microsoft.ContainerService/managedClusters",
            "location": "[parameters('region')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('jumpboxVM'), 'EnvironmentSetup')]"                
            ],
            "name": "[variables('aksCluster')]",
            "properties": {
                "kubernetesVersion": "[variables('aksVersion')]",
                "enableRBAC": true,
                "dnsPrefix": "[concat(variables('aksCluster'), 'dns')]",
                "nodeResourceGroup": "[concat('MC_', parameters('resourceGroup'), '_', variables('aksCluster'), '_', parameters('region'))]",
                "azureMonitorProfile": {
                    "metrics": {
                        "enabled": true,
                        "kubeStateMetrics": {
                            "metricLabelsAllowlist": "",
                            "metricAnnotationsAllowList": ""
                        }
                    }
                },
                "agentPoolProfiles": [
                    {
                        "name": "agentpool",
                        "osDiskSizeGB": 0,
                        "count": 1,
                        "enableAutoScaling": true,
                        "minCount": 1,
                        "maxCount": 4,
                        "vmSize": "Standard_D8s_v3",
                        "osType": "Linux",
                        "storageProfile": "ManagedDisks",
                        "type": "VirtualMachineScaleSets",
                        "mode": "System",
                        "maxPods": 110,
                        "availabilityZones": null,
                        "nodeLabels": {},
                        "nodeTaints": [],
                        "enableNodePublicIP": false,
                        "tags": {},
                        "vnetSubnetID": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('resourceGroup'), '/providers/Microsoft.Network/virtualNetworks/', variables('vnetName'), '/subnets/AKS')]"
                    }
                ],
                "networkProfile": {
                    "loadBalancerSku": "standard",
                    "networkPlugin": "azure",
                    "networkPolicy": "calico",
                    "serviceCidr": "192.168.0.0/20",
                    "dnsServiceIP": "192.168.0.4"
                },
                "autoUpgradeProfile": {
                    "upgradeChannel": "patch"
                },
                "disableLocalAccounts": false,
                "apiServerAccessProfile": {
                    "enablePrivateCluster": true
                },
                "addonProfiles": {
                    "azurepolicy": {
                        "enabled": false
                    },
                    "azureKeyvaultSecretsProvider": {
                        "enabled": false,
                        "config": null
                    }
                }
            },
            "tags": {},
            "sku": {
                "name": "Basic",
                "tier": "Paid"
            },
            "identity": {
                "type": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[variables('aksSubnetRoleGuid')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', variables('aksCluster'))]"                
            ],
            "scope": "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName') ,'/subnets/AKS')]",
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', variables('networkContributorRole'))]",
                "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', variables('aksCluster')), '2022-06-01', 'Full').identity.principalId]"
            }
        }
    ],
    "outputs": {}
}
