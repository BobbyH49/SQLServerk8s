apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  creationTimestamp: null
  generation: 1
  labels:
    app: grafana
  name: grafana
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: grafana
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: grafana
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: grafana-creds
        image: docker.io/grafana/grafana:latest
        imagePullPolicy: IfNotPresent
        name: grafana
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
          - name: datasource-config-volume
            mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
            subPath: datasources.yaml
          - name: dashboard-config-volume
            mountPath: /etc/grafana/provisioning/dashboards/dashboards.yaml
            subPath: dashboards.yaml
          - name: influxdb-volume
            mountPath: /var/lib/grafana/dashboards/influxdb.json
            subPath: influxdb.json
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: datasource-config-volume
          configMap:
            name: datasource-config
        - name: dashboard-config-volume
          configMap:
            name: dashboard-config
        - name: influxdb-volume
          configMap:
            name: influxdb
